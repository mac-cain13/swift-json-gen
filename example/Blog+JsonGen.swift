//
//  Blog+JsonGen.swift
//
//  Auto generated by swift-json-gen on Sun, 21 Feb 2016 20:10:15 GMT
//  See for details: https://github.com/tomlokhorst/swift-json-gen
//

import Foundation

extension Blog {
  static func decodeJson(json: AnyObject) throws -> Blog {
    let decoder = try JsonDecoder(json: json)

    let _id = try decoder.decode("id", decoder: Int.decodeJson)
    let _name = try decoder.decode("name", decoder: String.decodeJson)
    let _author = try decoder.decode("author", decoder: Optional.decodeJson(String.decodeJson))
    let _needsPassword = try decoder.decode("needsPassword", decoder: Bool.decodeJson)
    let _url = try decoder.decode("url", decoder: NSURL.decodeJson)

    guard let
      id = _id,
      name = _name,
      author = _author,
      needsPassword = _needsPassword,
      url = _url
    else {
      throw JsonDecodeError.StructErrors(type: "Blog", errors: decoder.errors)
    }

    return Blog(id: id, name: name, author: author, needsPassword: needsPassword, url: url)
  }

  func encodeJson() -> [String: AnyObject] {
    var dict: [String: AnyObject] = [:]

    dict["id"] = id.encodeJson()
    dict["name"] = name.encodeJson()
    dict["author"] = author.encodeJson({ $0.encodeJson() })
    dict["needsPassword"] = needsPassword.encodeJson()
    dict["url"] = url.encodeJson()

    return dict
  }
}
